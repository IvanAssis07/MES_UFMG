{
  "data": {
    "submissionDetails": {
      "runtime": 227,
      "runtimeDisplay": "227 ms",
      "runtimePercentile": 70.20780000000012,
      "runtimeDistribution": "{\"lang\": \"python3\", \"distribution\": [[\"69\", 1.0361], [\"121\", 0.6475], [\"173\", 2.2018999999999997], [\"226\", 38.73049999999997], [\"278\", 5.051300000000002], [\"330\", 16.70960000000001], [\"383\", 4.144600000000002], [\"435\", 2.5901], [\"487\", 0.7770999999999999], [\"540\", 1.4246999999999999], [\"592\", 1.4245999999999999], [\"644\", 0.6475], [\"697\", 0.6475], [\"749\", 0.6475], [\"801\", 0.6475], [\"854\", 0.6475], [\"906\", 0.1295], [\"958\", 0.259], [\"1011\", 0.1295], [\"1063\", 0.1295], [\"1115\", 0.1295], [\"1168\", 0.1295], [\"1220\", 0.1295], [\"1272\", 0.1295], [\"1325\", 0.1295], [\"1377\", 0.9065999999999999], [\"1429\", 0.3885], [\"1482\", 0.518], [\"1534\", 0.3885], [\"1586\", 0.259], [\"1639\", 0.9064999999999999], [\"1691\", 0.259], [\"1743\", 0.6475], [\"1796\", 0.1295], [\"1848\", 0.259], [\"1900\", 0.1295], [\"1953\", 0.1295], [\"2005\", 0.1295], [\"2057\", 0.1295], [\"2110\", 0.1295], [\"2162\", 0.1295], [\"2215\", 0.1295], [\"2267\", 0.1295], [\"2319\", 0.1295], [\"2372\", 0.1295], [\"2424\", 0.1295], [\"2476\", 0.1295], [\"2529\", 0.1295], [\"2581\", 0.1295], [\"2633\", 0.1295], [\"2686\", 0.1295], [\"2738\", 0.1295], [\"2790\", 0.2591], [\"2843\", 0.1295], [\"2895\", 0.1295], [\"2947\", 0.1295], [\"3000\", 0.259], [\"3052\", 0.259], [\"3104\", 0.1295], [\"3157\", 0.1295], [\"3209\", 0.259], [\"3261\", 0.1295], [\"3314\", 0.1295], [\"3366\", 0.1295], [\"3418\", 0.1295], [\"3471\", 0.1295], [\"3523\", 0.6476], [\"3575\", 0.3885], [\"3628\", 0.6475], [\"3680\", 0.6476], [\"3732\", 0.518], [\"3785\", 1.4245999999999996], [\"3837\", 0.7769999999999999], [\"3889\", 0.3885], [\"3942\", 0.1295], [\"3994\", 0.3885], [\"4046\", 0.259], [\"4099\", 0.1295], [\"4151\", 0.1295]]}",
      "memory": 20732000,
      "memoryDisplay": "20.7 MB",
      "memoryPercentile": 95.7254,
      "memoryDistribution": "{\"lang\": \"python3\", \"distribution\": [[\"21645\", 51.4246], [\"23536\", 2.202], [\"25428\", 12.3058], [\"27319\", 9.196600000000002], [\"29210\", 0.9065999999999999], [\"31101\", 0.1295], [\"32993\", 0.1295], [\"34884\", 1.5543], [\"36775\", 2.7201000000000004], [\"38666\", 0.2591], [\"40558\", 0.1295], [\"42449\", 0.1295], [\"44340\", 0.3886], [\"46231\", 0.1295], [\"48123\", 0.1295], [\"50014\", 0.1295], [\"51905\", 0.3886], [\"53796\", 0.1295], [\"55688\", 0.2591], [\"57579\", 0.2591], [\"59470\", 0.259], [\"61361\", 0.3886], [\"63253\", 0.5181], [\"65144\", 0.1295], [\"67035\", 0.1295], [\"68926\", 0.6476], [\"70818\", 1.0363], [\"72709\", 0.1295], [\"74600\", 0.1295], [\"76491\", 0.1295], [\"78383\", 0.1295], [\"80274\", 0.1295], [\"82165\", 0.1295], [\"84056\", 0.1295], [\"85948\", 0.1295], [\"87839\", 0.1295], [\"89730\", 0.3886], [\"91621\", 0.1295], [\"93513\", 0.1295], [\"95404\", 0.1295], [\"97295\", 0.1295], [\"99186\", 0.1295], [\"101078\", 0.1295], [\"102969\", 0.1295], [\"104860\", 0.2591], [\"106751\", 0.1295], [\"108643\", 0.1295], [\"110534\", 0.2591], [\"112425\", 0.1295], [\"114316\", 0.2591], [\"116208\", 0.1295], [\"118099\", 0.2591], [\"119990\", 0.2591], [\"121881\", 0.1295], [\"123773\", 0.1295], [\"125664\", 0.3886], [\"127555\", 0.6477], [\"129446\", 1.5544], [\"131338\", 0.5181], [\"133229\", 0.1295], [\"135120\", 0.1295], [\"137011\", 0.1295], [\"138903\", 0.1295], [\"140794\", 0.1295], [\"142685\", 0.1295], [\"144576\", 0.1295], [\"146468\", 0.1295], [\"148359\", 0.1295], [\"150250\", 0.1295]]}",
      "code": "class Solution(object):\n    def maxProfit(self, prices):\n        \"\"\"\n        :type prices: List[int]\n        :rtype: int\n        \"\"\"\n        if not prices:\n            return 0\n        \n        buy1 = -prices[0]\n        sell1 = 0\n        buy2 = -prices[0]\n        sell2 = 0\n        \n        for price in prices[1:]:\n            buy1 = max(buy1, -price)\n            sell1 = max(sell1, buy1 + price)\n            buy2 = max(buy2, sell1 - price)\n            sell2 = max(sell2, buy2 + price)\n        \n        return sell2",
      "timestamp": 1749412047,
      "statusCode": 10,
      "user": {
        "username": "yosQbj5lkC",
        "profile": {
          "realName": "Henrique Freitas",
          "userAvatar": "https://assets.leetcode.com/users/yosQbj5lkC/avatar_1748722942.png"
        }
      },
      "lang": { "name": "python3", "verboseName": "Python" },
      "question": {
        "questionId": "123",
        "titleSlug": "best-time-to-buy-and-sell-stock-iii",
        "hasFrontendPreview": false
      },
      "notes": "",
      "flagType": "WHITE",
      "topicTags": [],
      "runtimeError": null,
      "compileError": null,
      "lastTestcase": "",
      "codeOutput": "",
      "expectedOutput": "",
      "totalCorrect": 214,
      "totalTestcases": 214,
      "fullCodeOutput": null,
      "testDescriptions": null,
      "testBodies": null,
      "testInfo": null,
      "stdOutput": ""
    }
  }
}
