{
  "data": {
    "submissionDetails": {
      "runtime": 56,
      "runtimeDisplay": "56 ms",
      "runtimePercentile": 66.44300000000003,
      "runtimeDistribution": "{\"lang\": \"python3\", \"distribution\": [[\"6\", 0.4474], [\"12\", 0.4474], [\"18\", 0.2237], [\"24\", 0.4474], [\"30\", 0.2237], [\"35\", 0.2237], [\"41\", 1.1186], [\"47\", 10.0671], [\"53\", 24.8323], [\"59\", 11.1858], [\"65\", 2.2371], [\"70\", 3.3556], [\"76\", 4.2505], [\"82\", 3.1319], [\"88\", 3.8030999999999997], [\"94\", 1.3422], [\"99\", 0.6711], [\"105\", 1.566], [\"111\", 1.1185], [\"117\", 0.6711], [\"123\", 2.0134], [\"128\", 0.2237], [\"134\", 2.6844], [\"140\", 0.2237], [\"146\", 0.4474], [\"152\", 0.2237], [\"158\", 0.2237], [\"163\", 0.2237], [\"169\", 0.2237], [\"175\", 0.2237], [\"181\", 0.2237], [\"187\", 0.2237], [\"192\", 0.2237], [\"198\", 0.2237], [\"204\", 0.2237], [\"210\", 0.6711], [\"216\", 0.6711], [\"221\", 0.2237], [\"227\", 0.6711], [\"233\", 0.2237], [\"239\", 0.2237], [\"245\", 0.2237], [\"251\", 0.2237], [\"256\", 0.2237], [\"262\", 0.4474], [\"268\", 0.2237], [\"274\", 1.1186], [\"280\", 0.4474], [\"285\", 0.4474], [\"291\", 0.4474], [\"297\", 0.2237], [\"303\", 0.2237], [\"309\", 0.4474], [\"314\", 0.6711], [\"320\", 0.2237], [\"326\", 0.2237], [\"332\", 0.2237], [\"338\", 0.2237], [\"344\", 0.2237], [\"349\", 0.2237], [\"355\", 0.2237], [\"361\", 0.2237], [\"367\", 0.2237], [\"373\", 0.2237], [\"378\", 0.2237], [\"384\", 0.6711], [\"390\", 0.6711], [\"396\", 0.2237], [\"402\", 0.6711], [\"407\", 0.2237], [\"413\", 0.2237], [\"419\", 0.2237], [\"425\", 0.2237], [\"431\", 0.4474], [\"437\", 0.4474], [\"442\", 0.2237], [\"448\", 0.4474], [\"454\", 0.2237], [\"460\", 0.2237]]}",
      "memory": 13772000,
      "memoryDisplay": "13.8 MB",
      "memoryPercentile": 48.9934,
      "memoryDistribution": "{\"lang\": \"python3\", \"distribution\": [[\"12200\", 0.4474], [\"12300\", 5.1454], [\"12400\", 13.8702], [\"12500\", 12.0805], [\"12600\", 7.3826], [\"13000\", 0.2237], [\"13100\", 0.2237], [\"13400\", 0.2237], [\"13600\", 5.5928], [\"13700\", 5.8166], [\"13800\", 10.0671], [\"13900\", 2.4609], [\"14400\", 0.4474], [\"14500\", 0.2237], [\"14600\", 0.2237], [\"14700\", 0.2237], [\"14800\", 0.4474], [\"14900\", 2.0134], [\"15000\", 1.566], [\"15100\", 0.8949], [\"15200\", 0.2237], [\"16400\", 0.4474], [\"16500\", 0.4474], [\"16600\", 0.8949], [\"16700\", 0.8949], [\"16800\", 0.4474], [\"17300\", 0.4474], [\"17400\", 0.4474], [\"17500\", 0.4474], [\"17600\", 0.2237], [\"18500\", 0.2237], [\"18900\", 0.2237], [\"19000\", 0.6711], [\"19200\", 0.2237], [\"19300\", 0.2237], [\"19500\", 0.2237], [\"19600\", 0.6711], [\"19700\", 1.3423], [\"19800\", 0.4474], [\"19900\", 1.1186], [\"20000\", 1.1186], [\"20100\", 1.1186], [\"20200\", 0.2237], [\"20700\", 0.2237], [\"22700\", 0.2237], [\"24900\", 0.4474], [\"25000\", 0.2237], [\"25100\", 0.4474], [\"25200\", 1.3423], [\"25300\", 1.1186], [\"25400\", 1.1186], [\"25600\", 0.4474], [\"26500\", 0.2237], [\"26800\", 0.2237], [\"26900\", 0.2237], [\"27000\", 0.2237], [\"27100\", 0.2237], [\"27500\", 0.4474], [\"27600\", 0.2237], [\"27800\", 0.4474], [\"27900\", 0.6711], [\"28000\", 0.4474], [\"29000\", 0.2237], [\"29400\", 0.2237], [\"30000\", 0.2237], [\"30100\", 0.2237], [\"31500\", 0.2237], [\"31600\", 0.2237], [\"53500\", 0.4474], [\"53600\", 1.566]]}",
      "code": "class Solution(object):\n    def maxProfit(self, k, prices):\n        \"\"\"\n        :type k: int\n        :type prices: List[int]\n        :rtype: int\n        \"\"\"\n        n = len(prices)\n        if n == 0 or k == 0:\n            return 0\n\n        if k >= n // 2:\n            profit = 0\n            for i in range(1, n):\n                if prices[i] > prices[i - 1]:\n                    profit += prices[i] - prices[i - 1]\n            return profit\n\n        dp = [[0] * n for _ in range(k + 1)]\n\n        for t in range(1, k + 1):\n            max_diff = -prices[0]\n            for d in range(1, n):\n                dp[t][d] = max(dp[t][d - 1], prices[d] + max_diff)\n                max_diff = max(max_diff, dp[t - 1][d] - prices[d])\n\n        return dp[k][n - 1]\n",
      "timestamp": 1749413335,
      "statusCode": 10,
      "user": {
        "username": "yosQbj5lkC",
        "profile": {
          "realName": "Henrique Freitas",
          "userAvatar": "https://assets.leetcode.com/users/yosQbj5lkC/avatar_1748722942.png"
        }
      },
      "lang": { "name": "python3", "verboseName": "Python" },
      "question": {
        "questionId": "188",
        "titleSlug": "best-time-to-buy-and-sell-stock-iv",
        "hasFrontendPreview": false
      },
      "notes": "",
      "flagType": "WHITE",
      "topicTags": [],
      "runtimeError": null,
      "compileError": null,
      "lastTestcase": "",
      "codeOutput": "",
      "expectedOutput": "",
      "totalCorrect": 210,
      "totalTestcases": 210,
      "fullCodeOutput": null,
      "testDescriptions": null,
      "testBodies": null,
      "testInfo": null,
      "stdOutput": ""
    }
  }
}
