{
  "data": {
    "submissionDetails": {
      "runtime": 578,
      "runtimeDisplay": "578 ms",
      "runtimePercentile": 90.87699999999997,
      "runtimeDistribution": "{\"lang\": \"python\", \"distribution\": [[\"42\", 0.1779], [\"126\", 0.0081], [\"211\", 0.11339999999999999], [\"296\", 0.12959999999999997], [\"380\", 0.22669999999999993], [\"465\", 2.7903000000000016], [\"549\", 6.598900000000006], [\"634\", 14.330100000000002], [\"719\", 35.2688], [\"803\", 6.211300000000007], [\"888\", 2.4588000000000023], [\"972\", 1.4888999999999997], [\"1057\", 2.604000000000003], [\"1142\", 1.2461999999999998], [\"1226\", 0.7933999999999998], [\"1311\", 0.46159999999999984], [\"1395\", 0.5748999999999999], [\"1480\", 0.40499999999999986], [\"1565\", 0.38879999999999987], [\"1649\", 0.46979999999999983], [\"1734\", 0.2915999999999999], [\"1818\", 0.6640999999999998], [\"1903\", 2.8140000000000027], [\"1988\", 0.8095999999999998], [\"2072\", 0.25919999999999993], [\"2157\", 0.3482999999999999], [\"2241\", 0.5021999999999999], [\"2326\", 0.46969999999999984], [\"2411\", 0.21059999999999993], [\"2495\", 0.19439999999999993], [\"2580\", 0.20249999999999993], [\"2664\", 0.42109999999999986], [\"2749\", 0.38069999999999987], [\"2834\", 0.2996999999999999], [\"2918\", 0.2429999999999999], [\"3003\", 0.12149999999999996], [\"3087\", 0.12959999999999997], [\"3172\", 0.18629999999999994], [\"3257\", 0.19439999999999993], [\"3341\", 0.21869999999999992], [\"3426\", 0.11339999999999997], [\"3510\", 0.17009999999999995], [\"3595\", 0.23489999999999991], [\"3680\", 0.10529999999999998], [\"3764\", 0.09719999999999998], [\"3849\", 0.07289999999999998], [\"3933\", 0.040499999999999994], [\"4018\", 0.08099999999999999], [\"4103\", 0.10529999999999998], [\"4187\", 0.08909999999999997], [\"4272\", 0.09719999999999998], [\"4356\", 0.056699999999999987], [\"4441\", 0.09719999999999997], [\"4526\", 0.07289999999999998], [\"4610\", 0.12149999999999997], [\"4695\", 0.2834999999999999], [\"4779\", 0.3320999999999999], [\"4864\", 0.24299999999999994], [\"4949\", 0.23489999999999991], [\"5033\", 0.2429999999999999], [\"5118\", 0.2429999999999999], [\"5202\", 0.18629999999999994], [\"5287\", 0.3320999999999999], [\"5372\", 0.46979999999999983], [\"5456\", 0.25919999999999993], [\"5541\", 0.13769999999999996], [\"5625\", 0.21059999999999993], [\"5710\", 0.23489999999999991], [\"5795\", 0.3077999999999999], [\"5879\", 0.19439999999999993], [\"5964\", 0.44539999999999985], [\"6048\", 0.5101999999999999], [\"6133\", 0.25109999999999993], [\"6218\", 0.2753999999999999], [\"6302\", 0.39689999999999986], [\"6387\", 0.5102999999999999], [\"6471\", 0.2915999999999999], [\"6556\", 0.3805999999999999], [\"6641\", 0.2996999999999999], [\"6725\", 0.46159999999999984]]}",
      "memory": 18408000,
      "memoryDisplay": "18.4 MB",
      "memoryPercentile": 40.87320000000002,
      "memoryDistribution": "{\"lang\": \"python\", \"distribution\": [[\"16800\", 0.0081], [\"17000\", 0.0081], [\"17200\", 0.0081], [\"17400\", 0.0243], [\"17500\", 0.0081], [\"17600\", 0.0081], [\"17700\", 0.1456], [\"17800\", 0.3801], [\"17900\", 0.744], [\"18000\", 1.205], [\"18100\", 3.0166], [\"18200\", 8.3381], [\"18300\", 22.5233], [\"18400\", 22.7093], [\"18500\", 11.8399], [\"18600\", 1.4962], [\"18700\", 0.8249], [\"18800\", 0.9624], [\"18900\", 3.0813], [\"19000\", 3.8981], [\"19100\", 4.8281], [\"19200\", 1.3021], [\"19300\", 0.3397], [\"19400\", 0.2103], [\"19500\", 0.2911], [\"19600\", 0.2507], [\"19700\", 0.2588], [\"19800\", 0.2911], [\"19900\", 0.4367], [\"20000\", 0.3963], [\"20100\", 0.2184], [\"20200\", 0.1698], [\"20300\", 0.5823], [\"20400\", 0.9543], [\"20500\", 1.205], [\"20600\", 0.6066], [\"20700\", 0.6146]]}",
      "code": "class Solution(object):\n    def threeSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[List[int]]\n        \"\"\"\n        nums.sort()\n        result = []\n        n = len(nums)\n        \n        for i in range(n - 2):\n            if i > 0 and nums[i] == nums[i - 1]:\n                continue\n            \n            left = i + 1\n            right = n - 1\n            target = -nums[i]\n            \n            while left < right:\n                current_sum = nums[left] + nums[right]\n                if current_sum < target:\n                    left += 1\n                elif current_sum > target:\n                    right -= 1\n                else:\n                    result.append([nums[i], nums[left], nums[right]])\n                    while left < right and nums[left] == nums[left + 1]:\n                        left += 1\n                    while left < right and nums[right] == nums[right - 1]:\n                        right -= 1\n                    left += 1\n                    right -= 1\n        return result",
      "timestamp": 1749336114,
      "statusCode": 10,
      "user": {
        "username": "yosQbj5lkC",
        "profile": {
          "realName": "Henrique Freitas",
          "userAvatar": "https://assets.leetcode.com/users/yosQbj5lkC/avatar_1748722942.png"
        }
      },
      "lang": {
        "name": "python",
        "verboseName": "Python"
      },
      "question": {
        "questionId": "15",
        "titleSlug": "3sum",
        "hasFrontendPreview": false
      },
      "notes": "",
      "flagType": "WHITE",
      "topicTags": [],
      "runtimeError": null,
      "compileError": null,
      "lastTestcase": "",
      "codeOutput": "",
      "expectedOutput": "",
      "totalCorrect": 314,
      "totalTestcases": 314,
      "fullCodeOutput": null,
      "testDescriptions": null,
      "testBodies": null,
      "testInfo": null,
      "stdOutput": ""
    }
  }
}
