{
    "data": {
        "submissionDetails": {
            "runtime": 0,
            "runtimeDisplay": "0 ms",
            "runtimePercentile": 100.0,
            "runtimeDistribution": "{\"lang\": \"python3\", \"distribution\": [[\"0\", 88.028], [\"1\", 3.2519], [\"2\", 1.9439], [\"3\", 3.8696], [\"4\", 1.9257]]}",
            "memory": 18168000,
            "memoryDisplay": "18.2 MB",
            "memoryPercentile": 29.811899999999998,
            "memoryDistribution": "{\"lang\": \"python3\", \"distribution\": [[\"17500\", 0.0091], [\"17600\", 0.0273], [\"17700\", 0.4723], [\"17800\", 4.133], [\"17900\", 18.4213], [\"18000\", 28.1134], [\"18100\", 19.0117], [\"18200\", 21.1736]]}",
            "code": "from typing import Optional, List\nfrom collections import deque\n\n# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\nclass Solution:\n    \n    def zigzagLevelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        if not root:\n            return []\n        \n        result = []\n        queue = deque([root])\n        left_to_right = True\n        \n        while queue:\n            level_size = len(queue)\n            level = [0] * level_size  # pre-allocate space for current level\n            \n            for i in range(level_size):\n                node = queue.popleft()\n                index = i if left_to_right else (level_size - 1 - i)\n                level[index] = node.val\n                \n                if node.left:\n                    queue.append(node.left)\n                if node.right:\n                    queue.append(node.right)\n            \n            result.append(level)\n            left_to_right = not left_to_right  # toggle direction\n        \n        return result\n",
            "timestamp": 1749306407,
            "statusCode": 10,
            "user": {
                "username": "IvanAssis",
                "profile": {
                    "realName": "IvanAssis",
                    "userAvatar": "https://assets.leetcode.com/users/default_avatar.jpg"
                }
            },
            "lang": {
                "name": "python3",
                "verboseName": "Python3"
            },
            "question": {
                "questionId": "103",
                "titleSlug": "binary-tree-zigzag-level-order-traversal",
                "hasFrontendPreview": false
            },
            "notes": "",
            "flagType": "WHITE",
            "topicTags": [],
            "runtimeError": null,
            "compileError": null,
            "lastTestcase": "",
            "codeOutput": "",
            "expectedOutput": "",
            "totalCorrect": 33,
            "totalTestcases": 33,
            "fullCodeOutput": null,
            "testDescriptions": null,
            "testBodies": null,
            "testInfo": null,
            "stdOutput": ""
        }
    }
}