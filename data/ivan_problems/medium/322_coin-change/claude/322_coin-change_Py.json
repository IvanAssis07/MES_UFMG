{
    "data": {
        "submissionDetails": {
            "runtime": 700,
            "runtimeDisplay": "700 ms",
            "runtimePercentile": 81.5839000000004,
            "runtimeDistribution": "{\"lang\": \"python3\", \"distribution\": [[\"10\", 0.1293], [\"31\", 0.09969999999999998], [\"51\", 0.11449999999999999], [\"72\", 0.0037], [\"93\", 0.025900000000000006], [\"113\", 0.040600000000000004], [\"134\", 0.0111], [\"155\", 0.0037], [\"175\", 0.0037], [\"196\", 0.025900000000000003], [\"217\", 0.14780000000000001], [\"238\", 0.1368], [\"258\", 0.0814], [\"279\", 0.34739999999999993], [\"300\", 0.6241999999999999], [\"320\", 0.5356], [\"341\", 0.4101999999999999], [\"362\", 0.3325], [\"382\", 0.2995], [\"403\", 0.2551], [\"424\", 0.22919999999999996], [\"445\", 0.2293], [\"465\", 0.22540000000000002], [\"486\", 0.26610000000000006], [\"507\", 0.20329999999999998], [\"527\", 0.25889999999999996], [\"548\", 0.2662], [\"569\", 0.2587], [\"589\", 0.2181], [\"610\", 0.2402], [\"631\", 0.7681], [\"652\", 2.2378], [\"672\", 3.1163], [\"693\", 8.5665], [\"714\", 7.2517000000000005], [\"734\", 10.345699999999999], [\"755\", 9.157], [\"776\", 8.197099999999999], [\"796\", 4.604399999999999], [\"817\", 2.2300999999999997], [\"838\", 2.2708000000000004], [\"859\", 1.6581], [\"879\", 1.3071000000000004], [\"900\", 1.3735], [\"921\", 1.4622], [\"941\", 1.1593], [\"962\", 1.647], [\"983\", 1.2886000000000002], [\"1003\", 1.0412000000000001], [\"1024\", 0.8565], [\"1045\", 0.8972], [\"1066\", 0.8232999999999999], [\"1086\", 1.1187999999999998], [\"1107\", 1.3921000000000001], [\"1128\", 1.6137], [\"1148\", 1.8131], [\"1169\", 1.4290000000000003], [\"1190\", 1.0375], [\"1210\", 0.8084], [\"1231\", 0.6607000000000001], [\"1252\", 0.7232000000000001], [\"1273\", 0.539], [\"1293\", 0.39170000000000005], [\"1314\", 0.45059999999999995], [\"1335\", 0.506], [\"1355\", 0.36239999999999994], [\"1376\", 0.31779999999999997], [\"1397\", 0.2847], [\"1417\", 0.2515], [\"1438\", 0.1813], [\"1459\", 0.233], [\"1480\", 0.2699], [\"1500\", 0.2956999999999999], [\"1521\", 0.27369999999999994], [\"1542\", 0.5022999999999999], [\"1562\", 0.48000000000000004], [\"1583\", 0.26609999999999995], [\"1604\", 0.2329], [\"1624\", 0.15169999999999997], [\"1645\", 0.1295]]}",
            "memory": 18088000,
            "memoryDisplay": "18.1 MB",
            "memoryPercentile": 87.68979999999999,
            "memoryDistribution": "{\"lang\": \"python3\", \"distribution\": [[\"17308\", 0.1661], [\"17726\", 12.1441], [\"18143\", 51.427], [\"18561\", 4.5748], [\"18978\", 1.8572], [\"19396\", 2.0049], [\"19813\", 0.9858], [\"20231\", 1.7022000000000002], [\"20648\", 1.1262], [\"21066\", 0.37289999999999995], [\"21483\", 0.8640999999999999], [\"21901\", 0.42829999999999996], [\"22318\", 0.7384], [\"22736\", 0.3064], [\"23153\", 0.4763], [\"23571\", 0.0518], [\"23988\", 0.0849], [\"24406\", 0.0444], [\"24823\", 0.0518], [\"25241\", 0.0887], [\"25658\", 0.0627], [\"26076\", 0.0296], [\"26493\", 0.0296], [\"26911\", 0.018500000000000003], [\"27328\", 0.0111], [\"27746\", 0.0148], [\"28163\", 0.0259], [\"28581\", 0.0037], [\"28998\", 0.09230000000000001], [\"29416\", 0.12179999999999999], [\"29833\", 0.5833], [\"30251\", 0.055400000000000005], [\"30668\", 0.048100000000000004], [\"31086\", 0.14029999999999998], [\"31503\", 0.277], [\"31921\", 0.1441], [\"32338\", 0.2584], [\"32756\", 0.2253], [\"33173\", 0.06290000000000001], [\"33591\", 0.033299999999999996], [\"34008\", 0.022200000000000004], [\"34426\", 0.0296], [\"34843\", 0.018500000000000003], [\"35261\", 0.025900000000000003], [\"35678\", 0.0222], [\"36096\", 0.0629], [\"36513\", 0.4652], [\"36931\", 0.23629999999999998], [\"37348\", 0.2733], [\"37766\", 1.8425], [\"38183\", 0.49470000000000003], [\"38601\", 0.21050000000000002], [\"39018\", 0.6129], [\"39436\", 0.1181], [\"39853\", 0.0776], [\"40271\", 0.1588], [\"40688\", 0.0333], [\"41106\", 0.0333], [\"41523\", 0.1588], [\"41941\", 0.06280000000000001], [\"42358\", 0.048], [\"42776\", 0.05920000000000001], [\"43193\", 0.2548], [\"43611\", 0.23629999999999998], [\"44028\", 0.1478], [\"44446\", 1.8276], [\"44863\", 1.0486], [\"45281\", 0.42100000000000004], [\"45698\", 3.2198], [\"46116\", 0.384], [\"46533\", 0.1441], [\"46951\", 0.12919999999999998], [\"47368\", 0.0702], [\"47786\", 0.06280000000000001], [\"48203\", 0.07020000000000001], [\"48621\", 0.0259], [\"49038\", 0.0776], [\"49456\", 0.0407], [\"49873\", 0.0222], [\"50291\", 0.0111]]}",
            "code": "from typing import List\n\nclass Solution:\n    def coinChange(self, coins: List[int], amount: int) -> int:\n        \"\"\"\n        Find the fewest number of coins that make up the given amount.\n        \n        Args:\n            coins: List of coin denominations\n            amount: Target amount to make\n            \n        Returns:\n            Minimum number of coins needed, or -1 if impossible\n        \"\"\"\n        # Base case: if amount is 0, no coins needed\n        if amount == 0:\n            return 0\n            \n        # Create dp array where dp[i] = minimum coins needed for amount i\n        # Initialize with amount + 1 (represents infinity since max coins needed <= amount)\n        dp = [amount + 1] * (amount + 1)\n        \n        # Base case: 0 coins needed to make amount 0\n        dp[0] = 0\n        \n        # Fill dp array for each amount from 1 to target amount\n        for i in range(1, amount + 1):\n            # Try each coin denomination\n            for coin in coins:\n                # If current coin can be used (coin <= current amount)\n                if coin <= i:\n                    # Update dp[i] with minimum of:\n                    # - current dp[i] value\n                    # - 1 + dp[i - coin] (1 coin + min coins for remaining amount)\n                    dp[i] = min(dp[i], dp[i - coin] + 1)\n        \n        # Return result: -1 if impossible (dp[amount] > amount), \n        # otherwise return minimum coins needed\n        return dp[amount] if dp[amount] <= amount else -1",
            "timestamp": 1749307895,
            "statusCode": 10,
            "user": {
                "username": "IvanAssis",
                "profile": {
                    "realName": "IvanAssis",
                    "userAvatar": "https://assets.leetcode.com/users/default_avatar.jpg"
                }
            },
            "lang": {
                "name": "python3",
                "verboseName": "Python3"
            },
            "question": {
                "questionId": "322",
                "titleSlug": "coin-change",
                "hasFrontendPreview": false
            },
            "notes": "",
            "flagType": "WHITE",
            "topicTags": [],
            "runtimeError": null,
            "compileError": null,
            "lastTestcase": "",
            "codeOutput": "",
            "expectedOutput": "",
            "totalCorrect": 189,
            "totalTestcases": 189,
            "fullCodeOutput": null,
            "testDescriptions": null,
            "testBodies": null,
            "testInfo": null,
            "stdOutput": ""
        }
    }
}