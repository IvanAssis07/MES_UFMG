{
    "data": {
        "submissionDetails": {
            "runtime": 55,
            "runtimeDisplay": "55 ms",
            "runtimePercentile": 92.29220000000004,
            "runtimeDistribution": "{\"lang\": \"python3\", \"distribution\": [[\"5\", 0.1361], [\"15\", 0.0281], [\"25\", 0.0094], [\"35\", 2.5567999999999995], [\"46\", 4.433199999999999], [\"56\", 11.3014], [\"66\", 20.2946], [\"76\", 9.734499999999999], [\"86\", 6.3332999999999995], [\"97\", 3.2652], [\"107\", 1.3934], [\"117\", 3.6358000000000006], [\"127\", 5.0198], [\"138\", 4.7805], [\"148\", 2.4770999999999996], [\"158\", 2.2142000000000004], [\"168\", 1.0649000000000002], [\"178\", 0.8161999999999999], [\"189\", 0.5443], [\"199\", 0.3566], [\"209\", 0.46920000000000006], [\"219\", 0.3894], [\"230\", 0.47390000000000004], [\"240\", 0.43599999999999994], [\"250\", 0.3098], [\"260\", 0.23009999999999997], [\"270\", 0.2864], [\"281\", 0.26289999999999997], [\"291\", 0.21109999999999998], [\"301\", 0.1784], [\"311\", 0.16440000000000005], [\"322\", 0.1691], [\"332\", 0.13140000000000002], [\"342\", 0.10810000000000002], [\"352\", 0.1642], [\"362\", 0.3332], [\"373\", 0.2441], [\"383\", 0.1737], [\"393\", 0.1783], [\"403\", 0.17370000000000002], [\"414\", 0.1784], [\"424\", 0.21120000000000003], [\"434\", 0.3565], [\"444\", 0.33780000000000004], [\"455\", 0.4409], [\"465\", 0.4597], [\"475\", 0.3142], [\"485\", 0.29550000000000004], [\"495\", 0.30030000000000007], [\"506\", 0.3331], [\"516\", 0.31899999999999995], [\"526\", 0.3471], [\"536\", 0.3895], [\"547\", 0.5066], [\"557\", 0.4082], [\"567\", 0.3049], [\"577\", 0.291], [\"587\", 0.22060000000000002], [\"598\", 0.2862], [\"608\", 0.2018], [\"618\", 0.17370000000000002], [\"628\", 0.15500000000000005], [\"639\", 0.2535], [\"649\", 0.2112], [\"659\", 0.2113], [\"669\", 0.1785], [\"679\", 0.169], [\"690\", 0.169], [\"700\", 0.14550000000000002], [\"710\", 0.14559999999999998], [\"720\", 0.1736], [\"731\", 0.13160000000000002], [\"741\", 0.13160000000000002], [\"751\", 0.1456], [\"761\", 0.11750000000000001], [\"771\", 0.10810000000000002], [\"782\", 0.0752], [\"792\", 0.0846], [\"802\", 0.1267], [\"812\", 0.09870000000000001]]}",
            "memory": 18256000,
            "memoryDisplay": "18.3 MB",
            "memoryPercentile": 54.517799999999994,
            "memoryDistribution": "{\"lang\": \"python3\", \"distribution\": [[\"17600\", 0.0188], [\"17700\", 0.0469], [\"17800\", 0.1126], [\"17900\", 1.1259], [\"18000\", 5.7515], [\"18100\", 15.9598], [\"18200\", 22.4667], [\"18300\", 20.3791], [\"18400\", 17.8129], [\"18500\", 8.7024]]}",
            "code": "from collections import defaultdict\n\nclass Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        if not t or not s:\n            return \"\"\n        \n        dict_t = defaultdict(int)\n        for char in t:\n            dict_t[char] += 1\n        \n        required = len(dict_t)\n        formed = 0\n        window_counts = defaultdict(int)\n        \n        ans = float('inf'), None, None  # (window length, left, right)\n        left = 0\n        for right, char in enumerate(s):\n            window_counts[char] += 1\n            \n            if char in dict_t and window_counts[char] == dict_t[char]:\n                formed += 1\n            \n            while left <= right and formed == required:\n                if right - left + 1 < ans[0]:\n                    ans = (right - left + 1, left, right)\n                \n                left_char = s[left]\n                window_counts[left_char] -= 1\n                if left_char in dict_t and window_counts[left_char] < dict_t[left_char]:\n                    formed -= 1\n                left += 1\n        \n        return \"\" if ans[0] == float('inf') else s[ans[1]:ans[2]+1]",
            "timestamp": 1749481841,
            "statusCode": 10,
            "user": {
                "username": "ZRlvkAicEr",
                "profile": {
                    "realName": "ZRlvkAicEr",
                    "userAvatar": "https://assets.leetcode.com/users/ZRlvkAicEr/avatar_1749245074.png"
                }
            },
            "lang": {
                "name": "python3",
                "verboseName": "Python3"
            },
            "question": {
                "questionId": "76",
                "titleSlug": "minimum-window-substring",
                "hasFrontendPreview": false
            },
            "notes": "",
            "flagType": "WHITE",
            "topicTags": [],
            "runtimeError": null,
            "compileError": null,
            "lastTestcase": "",
            "codeOutput": "",
            "expectedOutput": "",
            "totalCorrect": 268,
            "totalTestcases": 268,
            "fullCodeOutput": null,
            "testDescriptions": null,
            "testBodies": null,
            "testInfo": null,
            "stdOutput": ""
        }
    }
}